The '2-matrix_divided' module
=============================

using 'matrix_divided'
----------------------

First import 'matrix_divided' from '2-matrix_divided':
 
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Then use it:

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	...     ]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


	>>> matrix = [
	...	[1, 2, 3],
	...	[4, -5, 6.0]
	...     ]
	>>> matrix_divided(matrix, -3)
	[[-0.33, -0.67, -1.0], [-1.33, 1.67, -2.0]]

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	...     ]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix = [
	...	[1, 2, 3.88],
	...	[4, -5.0, 6]
	...     ]
	>>> matrix_divided(matrix, "3")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	...     ]
	>>> matrix_divided(matrix, matrix)
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6, 9]
	...     ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, "5", 6]
	...     ]
	>>> matrix_divided(matrix, -88.92)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [1, 2, 3]
	>>> matrix_divided(matrix, 4)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6, True]
	...     ]
	>>> matrix_divided(matrix, 99)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[]], 0)
	[[]]
